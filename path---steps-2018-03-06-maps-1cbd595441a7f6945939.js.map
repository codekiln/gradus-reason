{"version":3,"sources":["webpack:///path---steps-2018-03-06-maps-1cbd595441a7f6945939.js","webpack:///./.cache/json/steps-2018-03-06-maps.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/steps-2018-03-06-maps.json","module","exports","data","post","html","excerpt","timeToRead","fields","slug","frontmatter","tags","author","id","bio","twitter","avatar","children","responsiveResolution","src","srcSet","title","updatedDate","image","recents","edges","node","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,+EACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,KAAA,s9UAA6wQC,QAAA,8IAAAC,WAAA,EAAAC,QAAqiFC,KAAA,4BAAkCC,aAAgBC,MAAA,+EAAAC,QAAiGC,GAAA,YAAAC,IAAA,GAAAC,QAAA,YAAAC,QAA0DC,WAAaC,sBAAwBC,IAAA,qDAAAC,OAAA,+KAAkPC,MAAA,OAAAC,YAAA,cAAAC,OAAqDN,WAAaC,sBAAwBC,IAAA,qDAAAC,OAAA,wOAA2SI,SAAYC,QAAUC,MAAQlB,QAAUC,KAAA,+BAAqCF,WAAA,EAAAG,aAA+BW,MAAA,UAAAE,OAA2BN,WAAaC,sBAAwBC,IAAA,qDAAAC,OAAA,sOAAySR,QAAWC,GAAA,YAAAG,QAA2BC,WAAaC,sBAAwBC,IAAA,qDAAAC,OAAA,2OAA+SM,MAAQlB,QAAUC,KAAA,+BAAqCF,WAAA,EAAAG,aAA+BW,MAAA,UAAAE,OAA2BN,WAAaC,sBAAwBC,IAAA,qDAAAC,OAAA,sOAAySR,QAAWC,GAAA,YAAAG,QAA2BC,WAAaC,sBAAwBC,IAAA,qDAAAC,OAAA,2OAA+SM,MAAQlB,QAAUC,KAAA,gCAAsCF,WAAA,EAAAG,aAA+BW,MAAA,WAAAE,OAA4BN,WAAaC,sBAAwBC,IAAA,qDAAAC,OAAA,sOAAySR,QAAWC,GAAA,YAAAG,QAA2BC,WAAaC,sBAAwBC,IAAA,qDAAAC,OAAA,2OAA+SM,MAAQlB,QAAUC,KAAA,+BAAqCF,WAAA,EAAAG,aAA+BW,MAAA,UAAAE,OAA2BN,WAAaC,sBAAwBC,IAAA,qDAAAC,OAAA,sOAAySR,QAAWC,GAAA,YAAAG,QAA2BC,WAAaC,sBAAwBC,IAAA,qDAAAC,OAAA,6OAAgTO,aAAgBlB,KAAA","file":"path---steps-2018-03-06-maps-1cbd595441a7f6945939.js","sourcesContent":["webpackJsonp([17851383758665],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/steps-2018-03-06-maps.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"post\":{\"html\":\"<h2 id=\\\"what-are-maps\\\"><a href=\\\"#what-are-maps\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>What are Maps?</h2>\\n<p>In many applications it becomes necessary to look up a\\n<a href=\\\"/steps/tags/records/\\\">Record</a>, <a href=\\\"/steps/tags/objects/\\\">Object</a> or\\nother data structure by a unique identifier, just as a phone book\\nenables one look up a person's phone number by their name. This structure\\ngoes by many names: hashtable, lookup table, hashmap, dict, dictionary, map, etc.\\nThere are many tools for this in ReasonML, but two good choices are: </p>\\n<ul>\\n<li>Use <a href=\\\"https://reasonml.github.io/api/Map.html\\\"><code>Map</code></a> from Reason's OCaml standard API.\\nThis is a good general-purpose, performant, immutable dictionary and should probably be\\nthe first choice. </li>\\n<li>Use Bucklescript's <a href=\\\"https://bucklescript.github.io/docs/en/object.html#object-as-record\\\">Object as Hash Map<code>Js.Dict.t</code></a>.\\nThis is is a thin wrapper over the mutable Javascript object.\\nIt's a good option you are worried about minimizing your bundle size or\\nare modifying objects that come from JS. </li>\\n</ul>\\n<h3 id=\\\"side-note-reason--ocaml-standard-libraries\\\"><a href=\\\"#side-note-reason--ocaml-standard-libraries\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Side Note: Reason &#x26; OCaml Standard Libraries</h3>\\n<p>If you go to the <a href=\\\"https://reasonml.github.io/docs/en/overview.html\\\">Reason docs</a> and search\\nfor <code>Map</code> today, you won't find any resources for <code>Map</code>. There are many\\nfeatures in Reason that are supplied by OCaml's standard\\nlibrary, whose docs are <a href=\\\"https://reasonml.github.io/api/index.html\\\">accessible on the API tab of the Reason site</a>,\\nthough certain elements of the standard API are not currently indexed\\nby the search engine or given much coverage in the standard Reason docs.\\nIf you look in the API tab, you'll find <a href=\\\"https://reasonml.github.io/api/Map.html\\\"><code>Map - Association tables over ordered types</code></a> is one of API entries,\\nbut the API docs can be a little sparse. In cases like this I find it helpful\\nto search for the item in Real World OCaml book or in Stack Overflow's OCaml posts,\\nand then use <a href=\\\"https://chrome.google.com/webstore/detail/reason-tools/kmdelnjbembbiodplmhgfjpecibfhadd\\\">the Reason Tools browser extension</a>\\nto convert any examples to Reason. See the Links section at the bottom of this post\\nfor more information.</p>\\n<h2 id=\\\"construct-a-map-from-a-list\\\"><a href=\\\"#construct-a-map-from-a-list\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Construct a <code>Map</code> From a <code>List</code></h2>\\n<p>This example declares a new <a href=\\\"/steps/tags/records/\\\">Record</a> type\\ncalled <code>composer</code>, then constructs a new <code>Map</code> type with <code>String</code> instances\\nas the lookup keys. After we have minted a specialized <code>StringMap</code> Module,\\nwe create a <code>getComposerMap</code> function which converts a <code>list</code> of <code>composer</code> types\\ninto the <code>StringMap</code>. See the post on <a href=\\\"/steps/2018-03-14--modules/\\\"><code>Modules</code></a>\\nin Gradus Reason for more info.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n        <pre class=\\\"language-reason\\\"><code>type composer = {\\n    id: string,\\n    name: string\\n  };\\n  \\nmodule StringMap = Map.Make(String);\\n\\nlet getComposerMap = (composers: list(composer)) => {\\n    List.fold_left(\\n        (map, user) => StringMap.add(user.id, user.name, map),\\n        StringMap.empty,\\n        composers\\n    )\\n};\\n\\nlet composers: list(composer) = [\\n    {id: \\\"lbeethoven\\\", name: \\\"Ludwig van Beethoven\\\"},\\n    {id: \\\"wmozart\\\", name: \\\"Wolfgang Amadeus Mozart\\\"},\\n    {id: \\\"jbrahms\\\", name: \\\"Johannes Brahms\\\"}\\n];\\n\\nlet composerMap = getComposerMap(composers);\\n\\nJs.log(\\\"iterate through & print the composers:\\\");\\nJs.log(\\\"--------------------------------------\\\");\\ncomposerMap  |> StringMap.iter (\\n    (id, composerName) => Js.log({j|key:$id, val:$composerName|j})\\n    );\\n\\nJs.log(\\\"                       \\\");\\nJs.log(\\\"Find a particular item:\\\");\\nJs.log(\\\"-----------------------\\\");\\nJs.log(StringMap.find(\\\"lbeethoven\\\", composerMap));</code></pre>\\n        </div>\\n<p>This example is powered by: </p>\\n<ul>\\n<li><a href=\\\"https://reasonml.github.io/api/String.html\\\"><code>String</code></a>,\\nthe <code>String</code> module from the Reason OCaml standard API, which is\\na <code>Module</code> that operates on entities of the <a href=\\\"https://realworldocaml.org/v1/en/html/imperative-programming-1.html#strings\\\"><code>string</code></a>\\ntype. </li>\\n<li>\\n<p><a href=\\\"https://reasonml.github.io/api/List.html#VALfold_left\\\"><code>List.fold_left</code></a>, which is\\nThe Reason equivalent of Javascript's <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\\\">Array.prototype.reduce</a>.\\nThis iterates over an object and accumulates results into another object.\\nHere, we pass the function that will be applied to each element of the list:\\n<code>(map, user) => StringMap.add(user.id, user.name, map)</code>. This function that we supply\\nitself takes two parameters. The first parameter (here, <code>map</code>) is the variable\\nto accumulate results in. The second parameter (here, <code>user</code>) is the current object\\nin the iteration:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>List.fold_left(\\n        (map, user) => StringMap.add(user.id, user.name, map),\\n        StringMap.empty,\\n        composers\\n    )</code></pre>\\n      </div>\\n<p>This takes the <code>composers</code> array, which is a <code>list</code> of <code>composer</code> types,\\nand executes the supplied folding function <code>(map, user) => StringMap.add(user.id, user.name, map)</code>.\\nFor the first composer, <code>map</code> is <code>StringMap.empty</code>. For all the other\\ncomposers, the <code>map</code> parameter is the cumulative result of calling\\n<code>StringMap.add(user.id, user.name, map)</code>. At the end of <code>fold_left</code>, the last\\ncomposer returns the newly filled <code>StringMap</code>.</p>\\n</li>\\n<li><a href=\\\"https://bucklescript.github.io/docs/en/common-data-types.html#interpolation\\\">BuckleScript's <code>j</code> string interpolation</a>, which\\nlooks like <code>{j|key:$id, val:$composerName|j}</code> and is the equivalent of JS' <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\\\">string interpolation</a>. Here, the\\n<code>$id</code> and <code>$composerName</code> variables are resolved from block scope into a <code>string</code>.</li>\\n<li><a href=\\\"https://reasonml.github.io/api/Map.Make.html#VALfind\\\">Map.Make.find</a> is the\\nmethod used to get a value by its key. As you can see, the heading for this page\\nsays that Map.Make is a \\\"Functor\\\", which in reason is a function that returns a Module.\\nHere, when we did <code>module StringMap = Map.Make(String);</code>, that constructed\\na new, specific instance of the <code>Map</code> Module that has <code>String</code> map keys.\\nYou could think of <code>Map.Make</code> as a constructor for a Module, and the\\nconstructed module has the same methods listed in the documentation.</li>\\n</ul>\\n<h2 id=\\\"map---links\\\"><a href=\\\"#map---links\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Map - Links</h2>\\n<ul>\\n<li><a href=\\\"https://reasonml.github.io/api/Map.html\\\">Reason Standard API docs for <code>Map</code></a></li>\\n<li><a href=\\\"https://reasonml.github.io/api/Map.Make.html\\\">Reason Standard API docs for <code>Map.Make</code></a></li>\\n<li><a href=\\\"https://realworldocaml.org/v1/en/html/maps-and-hash-tables.html\\\"><em>Real World OCaml</em> on Maps</a></li>\\n<li><a href=\\\"https://ocaml.org/learn/tutorials/map.html\\\">OCaml Tutorial for <code>Map</code>s</a></li>\\n<li><a href=\\\"https://github.com/glennsl/bucklescript-cookbook#create-a-map-data-structure-add-or-replace-an-entry-and-print-each-keyvalue-pair\\\">Glennsl's <em>bucklescript-cookbook</em> guide to Maps and their alternatives</a></li>\\n<li><a href=\\\"https://discordapp.com/channels/235176658175262720/235176658175262720?jump=419986814288265216\\\">Reason Discord discussion on <code>Map</code> vs <code>Js.Dict.t</code></a></li>\\n<li><a href=\\\"https://reasonml.github.io/api/List.html#VALfold_left\\\"><code>List.fold_left</code></a> is\\nthe Reason equivalent to JS' <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\\\">Array.reduce</a>.\\nHere's a <a href=\\\"https://codepen.io/codekiln/pen/NXdmvB\\\">Codepen - ES6 + array.reduce</a></li>\\n</ul>\\n<p>Image Credit: <a href=\\\"https://www.flickr.com/photos/splatt/316215760/\\\"><em>Warburton Post Office Boxes</em> by Mick Stanic on Flickr</a></p>\\n<p><em><a href=\\\"https://github.com/codekiln/gradus-reason/tree/master/data/steps/2018-03-06--maps/index.md\\\">Edit this post here</a></em></p>\",\"excerpt\":\"What are Maps? In many applications it becomes necessary to look up a \\n Record ,  Object  or\\nother data structure by a unique identifier…\",\"timeToRead\":5,\"fields\":{\"slug\":\"/steps/2018-03-06--maps/\"},\"frontmatter\":{\"tags\":[\"hashtables\",\"maps\",\"records\",\"fold-left\",\"j-string-interpolation\",\"functors\"],\"author\":{\"id\":\"Myer Nore\",\"bio\":\"\",\"twitter\":\"@MyerNore\",\"avatar\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-03c1e.jpg\",\"srcSet\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-03c1e.jpg 1x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-95a48.jpg 1.5x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-cc0c5.jpg 2x\"}}]}},\"title\":\"Maps\",\"updatedDate\":\"Mar 6, 2018\",\"image\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/502660d3a6174f3c7a7553e0a1b971c9-936ba.jpg\",\"srcSet\":\"/static/502660d3a6174f3c7a7553e0a1b971c9-936ba.jpg 1x,\\n/static/502660d3a6174f3c7a7553e0a1b971c9-1afa9.jpg 1.5x,\\n/static/502660d3a6174f3c7a7553e0a1b971c9-e5a09.jpg 2x,\\n/static/502660d3a6174f3c7a7553e0a1b971c9-25bb3.jpg 3x\"}}]}}},\"recents\":{\"edges\":[{\"node\":{\"fields\":{\"slug\":\"/steps/2018-03-14--modules/\"},\"timeToRead\":6,\"frontmatter\":{\"title\":\"Modules\",\"image\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/4b207212da2130c54d5d3f3c6852486b-7f526.jpg\",\"srcSet\":\"/static/4b207212da2130c54d5d3f3c6852486b-7f526.jpg 1x,\\n/static/4b207212da2130c54d5d3f3c6852486b-12b36.jpg 1.5x,\\n/static/4b207212da2130c54d5d3f3c6852486b-f59e5.jpg 2x,\\n/static/4b207212da2130c54d5d3f3c6852486b-4704a.jpg 3x\"}}]},\"author\":{\"id\":\"Myer Nore\",\"avatar\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg\",\"srcSet\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg 1x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-e6d15.jpg 1.5x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-b974e.jpg 2x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-89580.jpg 3x\"}}]}}}}},{\"node\":{\"fields\":{\"slug\":\"/steps/2018-03-02--objects/\"},\"timeToRead\":2,\"frontmatter\":{\"title\":\"Objects\",\"image\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/0a992d200e8146e849bd5350b9256aee-7f526.jpg\",\"srcSet\":\"/static/0a992d200e8146e849bd5350b9256aee-7f526.jpg 1x,\\n/static/0a992d200e8146e849bd5350b9256aee-12b36.jpg 1.5x,\\n/static/0a992d200e8146e849bd5350b9256aee-f59e5.jpg 2x,\\n/static/0a992d200e8146e849bd5350b9256aee-4704a.jpg 3x\"}}]},\"author\":{\"id\":\"Myer Nore\",\"avatar\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg\",\"srcSet\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg 1x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-e6d15.jpg 1.5x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-b974e.jpg 2x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-89580.jpg 3x\"}}]}}}}},{\"node\":{\"fields\":{\"slug\":\"/steps/2018-02-25--variants/\"},\"timeToRead\":5,\"frontmatter\":{\"title\":\"Variants\",\"image\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/5dc86a763411f112f6bc01857ef6b383-7f526.jpg\",\"srcSet\":\"/static/5dc86a763411f112f6bc01857ef6b383-7f526.jpg 1x,\\n/static/5dc86a763411f112f6bc01857ef6b383-12b36.jpg 1.5x,\\n/static/5dc86a763411f112f6bc01857ef6b383-f59e5.jpg 2x,\\n/static/5dc86a763411f112f6bc01857ef6b383-4704a.jpg 3x\"}}]},\"author\":{\"id\":\"Myer Nore\",\"avatar\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg\",\"srcSet\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg 1x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-e6d15.jpg 1.5x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-b974e.jpg 2x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-89580.jpg 3x\"}}]}}}}},{\"node\":{\"fields\":{\"slug\":\"/steps/2018-02-23--records/\"},\"timeToRead\":3,\"frontmatter\":{\"title\":\"Records\",\"image\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/08d6e8e89f98423aecffd7e6315dbf34-7f526.jpg\",\"srcSet\":\"/static/08d6e8e89f98423aecffd7e6315dbf34-7f526.jpg 1x,\\n/static/08d6e8e89f98423aecffd7e6315dbf34-12b36.jpg 1.5x,\\n/static/08d6e8e89f98423aecffd7e6315dbf34-f59e5.jpg 2x,\\n/static/08d6e8e89f98423aecffd7e6315dbf34-4704a.jpg 3x\"}}]},\"author\":{\"id\":\"Myer Nore\",\"avatar\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg\",\"srcSet\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg 1x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-e6d15.jpg 1.5x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-b974e.jpg 2x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-89580.jpg 3x\"}}]}}}}}]}},\"pathContext\":{\"slug\":\"/steps/2018-03-06--maps/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---steps-2018-03-06-maps-1cbd595441a7f6945939.js","module.exports = {\"data\":{\"post\":{\"html\":\"<h2 id=\\\"what-are-maps\\\"><a href=\\\"#what-are-maps\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>What are Maps?</h2>\\n<p>In many applications it becomes necessary to look up a\\n<a href=\\\"/steps/tags/records/\\\">Record</a>, <a href=\\\"/steps/tags/objects/\\\">Object</a> or\\nother data structure by a unique identifier, just as a phone book\\nenables one look up a person's phone number by their name. This structure\\ngoes by many names: hashtable, lookup table, hashmap, dict, dictionary, map, etc.\\nThere are many tools for this in ReasonML, but two good choices are: </p>\\n<ul>\\n<li>Use <a href=\\\"https://reasonml.github.io/api/Map.html\\\"><code>Map</code></a> from Reason's OCaml standard API.\\nThis is a good general-purpose, performant, immutable dictionary and should probably be\\nthe first choice. </li>\\n<li>Use Bucklescript's <a href=\\\"https://bucklescript.github.io/docs/en/object.html#object-as-record\\\">Object as Hash Map<code>Js.Dict.t</code></a>.\\nThis is is a thin wrapper over the mutable Javascript object.\\nIt's a good option you are worried about minimizing your bundle size or\\nare modifying objects that come from JS. </li>\\n</ul>\\n<h3 id=\\\"side-note-reason--ocaml-standard-libraries\\\"><a href=\\\"#side-note-reason--ocaml-standard-libraries\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Side Note: Reason &#x26; OCaml Standard Libraries</h3>\\n<p>If you go to the <a href=\\\"https://reasonml.github.io/docs/en/overview.html\\\">Reason docs</a> and search\\nfor <code>Map</code> today, you won't find any resources for <code>Map</code>. There are many\\nfeatures in Reason that are supplied by OCaml's standard\\nlibrary, whose docs are <a href=\\\"https://reasonml.github.io/api/index.html\\\">accessible on the API tab of the Reason site</a>,\\nthough certain elements of the standard API are not currently indexed\\nby the search engine or given much coverage in the standard Reason docs.\\nIf you look in the API tab, you'll find <a href=\\\"https://reasonml.github.io/api/Map.html\\\"><code>Map - Association tables over ordered types</code></a> is one of API entries,\\nbut the API docs can be a little sparse. In cases like this I find it helpful\\nto search for the item in Real World OCaml book or in Stack Overflow's OCaml posts,\\nand then use <a href=\\\"https://chrome.google.com/webstore/detail/reason-tools/kmdelnjbembbiodplmhgfjpecibfhadd\\\">the Reason Tools browser extension</a>\\nto convert any examples to Reason. See the Links section at the bottom of this post\\nfor more information.</p>\\n<h2 id=\\\"construct-a-map-from-a-list\\\"><a href=\\\"#construct-a-map-from-a-list\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Construct a <code>Map</code> From a <code>List</code></h2>\\n<p>This example declares a new <a href=\\\"/steps/tags/records/\\\">Record</a> type\\ncalled <code>composer</code>, then constructs a new <code>Map</code> type with <code>String</code> instances\\nas the lookup keys. After we have minted a specialized <code>StringMap</code> Module,\\nwe create a <code>getComposerMap</code> function which converts a <code>list</code> of <code>composer</code> types\\ninto the <code>StringMap</code>. See the post on <a href=\\\"/steps/2018-03-14--modules/\\\"><code>Modules</code></a>\\nin Gradus Reason for more info.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n        <pre class=\\\"language-reason\\\"><code>type composer = {\\n    id: string,\\n    name: string\\n  };\\n  \\nmodule StringMap = Map.Make(String);\\n\\nlet getComposerMap = (composers: list(composer)) => {\\n    List.fold_left(\\n        (map, user) => StringMap.add(user.id, user.name, map),\\n        StringMap.empty,\\n        composers\\n    )\\n};\\n\\nlet composers: list(composer) = [\\n    {id: \\\"lbeethoven\\\", name: \\\"Ludwig van Beethoven\\\"},\\n    {id: \\\"wmozart\\\", name: \\\"Wolfgang Amadeus Mozart\\\"},\\n    {id: \\\"jbrahms\\\", name: \\\"Johannes Brahms\\\"}\\n];\\n\\nlet composerMap = getComposerMap(composers);\\n\\nJs.log(\\\"iterate through & print the composers:\\\");\\nJs.log(\\\"--------------------------------------\\\");\\ncomposerMap  |> StringMap.iter (\\n    (id, composerName) => Js.log({j|key:$id, val:$composerName|j})\\n    );\\n\\nJs.log(\\\"                       \\\");\\nJs.log(\\\"Find a particular item:\\\");\\nJs.log(\\\"-----------------------\\\");\\nJs.log(StringMap.find(\\\"lbeethoven\\\", composerMap));</code></pre>\\n        </div>\\n<p>This example is powered by: </p>\\n<ul>\\n<li><a href=\\\"https://reasonml.github.io/api/String.html\\\"><code>String</code></a>,\\nthe <code>String</code> module from the Reason OCaml standard API, which is\\na <code>Module</code> that operates on entities of the <a href=\\\"https://realworldocaml.org/v1/en/html/imperative-programming-1.html#strings\\\"><code>string</code></a>\\ntype. </li>\\n<li>\\n<p><a href=\\\"https://reasonml.github.io/api/List.html#VALfold_left\\\"><code>List.fold_left</code></a>, which is\\nThe Reason equivalent of Javascript's <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\\\">Array.prototype.reduce</a>.\\nThis iterates over an object and accumulates results into another object.\\nHere, we pass the function that will be applied to each element of the list:\\n<code>(map, user) => StringMap.add(user.id, user.name, map)</code>. This function that we supply\\nitself takes two parameters. The first parameter (here, <code>map</code>) is the variable\\nto accumulate results in. The second parameter (here, <code>user</code>) is the current object\\nin the iteration:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>List.fold_left(\\n        (map, user) => StringMap.add(user.id, user.name, map),\\n        StringMap.empty,\\n        composers\\n    )</code></pre>\\n      </div>\\n<p>This takes the <code>composers</code> array, which is a <code>list</code> of <code>composer</code> types,\\nand executes the supplied folding function <code>(map, user) => StringMap.add(user.id, user.name, map)</code>.\\nFor the first composer, <code>map</code> is <code>StringMap.empty</code>. For all the other\\ncomposers, the <code>map</code> parameter is the cumulative result of calling\\n<code>StringMap.add(user.id, user.name, map)</code>. At the end of <code>fold_left</code>, the last\\ncomposer returns the newly filled <code>StringMap</code>.</p>\\n</li>\\n<li><a href=\\\"https://bucklescript.github.io/docs/en/common-data-types.html#interpolation\\\">BuckleScript's <code>j</code> string interpolation</a>, which\\nlooks like <code>{j|key:$id, val:$composerName|j}</code> and is the equivalent of JS' <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\\\">string interpolation</a>. Here, the\\n<code>$id</code> and <code>$composerName</code> variables are resolved from block scope into a <code>string</code>.</li>\\n<li><a href=\\\"https://reasonml.github.io/api/Map.Make.html#VALfind\\\">Map.Make.find</a> is the\\nmethod used to get a value by its key. As you can see, the heading for this page\\nsays that Map.Make is a \\\"Functor\\\", which in reason is a function that returns a Module.\\nHere, when we did <code>module StringMap = Map.Make(String);</code>, that constructed\\na new, specific instance of the <code>Map</code> Module that has <code>String</code> map keys.\\nYou could think of <code>Map.Make</code> as a constructor for a Module, and the\\nconstructed module has the same methods listed in the documentation.</li>\\n</ul>\\n<h2 id=\\\"map---links\\\"><a href=\\\"#map---links\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Map - Links</h2>\\n<ul>\\n<li><a href=\\\"https://reasonml.github.io/api/Map.html\\\">Reason Standard API docs for <code>Map</code></a></li>\\n<li><a href=\\\"https://reasonml.github.io/api/Map.Make.html\\\">Reason Standard API docs for <code>Map.Make</code></a></li>\\n<li><a href=\\\"https://realworldocaml.org/v1/en/html/maps-and-hash-tables.html\\\"><em>Real World OCaml</em> on Maps</a></li>\\n<li><a href=\\\"https://ocaml.org/learn/tutorials/map.html\\\">OCaml Tutorial for <code>Map</code>s</a></li>\\n<li><a href=\\\"https://github.com/glennsl/bucklescript-cookbook#create-a-map-data-structure-add-or-replace-an-entry-and-print-each-keyvalue-pair\\\">Glennsl's <em>bucklescript-cookbook</em> guide to Maps and their alternatives</a></li>\\n<li><a href=\\\"https://discordapp.com/channels/235176658175262720/235176658175262720?jump=419986814288265216\\\">Reason Discord discussion on <code>Map</code> vs <code>Js.Dict.t</code></a></li>\\n<li><a href=\\\"https://reasonml.github.io/api/List.html#VALfold_left\\\"><code>List.fold_left</code></a> is\\nthe Reason equivalent to JS' <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\\\">Array.reduce</a>.\\nHere's a <a href=\\\"https://codepen.io/codekiln/pen/NXdmvB\\\">Codepen - ES6 + array.reduce</a></li>\\n</ul>\\n<p>Image Credit: <a href=\\\"https://www.flickr.com/photos/splatt/316215760/\\\"><em>Warburton Post Office Boxes</em> by Mick Stanic on Flickr</a></p>\\n<p><em><a href=\\\"https://github.com/codekiln/gradus-reason/tree/master/data/steps/2018-03-06--maps/index.md\\\">Edit this post here</a></em></p>\",\"excerpt\":\"What are Maps? In many applications it becomes necessary to look up a \\n Record ,  Object  or\\nother data structure by a unique identifier…\",\"timeToRead\":5,\"fields\":{\"slug\":\"/steps/2018-03-06--maps/\"},\"frontmatter\":{\"tags\":[\"hashtables\",\"maps\",\"records\",\"fold-left\",\"j-string-interpolation\",\"functors\"],\"author\":{\"id\":\"Myer Nore\",\"bio\":\"\",\"twitter\":\"@MyerNore\",\"avatar\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-03c1e.jpg\",\"srcSet\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-03c1e.jpg 1x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-95a48.jpg 1.5x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-cc0c5.jpg 2x\"}}]}},\"title\":\"Maps\",\"updatedDate\":\"Mar 6, 2018\",\"image\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/502660d3a6174f3c7a7553e0a1b971c9-936ba.jpg\",\"srcSet\":\"/static/502660d3a6174f3c7a7553e0a1b971c9-936ba.jpg 1x,\\n/static/502660d3a6174f3c7a7553e0a1b971c9-1afa9.jpg 1.5x,\\n/static/502660d3a6174f3c7a7553e0a1b971c9-e5a09.jpg 2x,\\n/static/502660d3a6174f3c7a7553e0a1b971c9-25bb3.jpg 3x\"}}]}}},\"recents\":{\"edges\":[{\"node\":{\"fields\":{\"slug\":\"/steps/2018-03-14--modules/\"},\"timeToRead\":6,\"frontmatter\":{\"title\":\"Modules\",\"image\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/4b207212da2130c54d5d3f3c6852486b-7f526.jpg\",\"srcSet\":\"/static/4b207212da2130c54d5d3f3c6852486b-7f526.jpg 1x,\\n/static/4b207212da2130c54d5d3f3c6852486b-12b36.jpg 1.5x,\\n/static/4b207212da2130c54d5d3f3c6852486b-f59e5.jpg 2x,\\n/static/4b207212da2130c54d5d3f3c6852486b-4704a.jpg 3x\"}}]},\"author\":{\"id\":\"Myer Nore\",\"avatar\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg\",\"srcSet\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg 1x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-e6d15.jpg 1.5x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-b974e.jpg 2x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-89580.jpg 3x\"}}]}}}}},{\"node\":{\"fields\":{\"slug\":\"/steps/2018-03-02--objects/\"},\"timeToRead\":2,\"frontmatter\":{\"title\":\"Objects\",\"image\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/0a992d200e8146e849bd5350b9256aee-7f526.jpg\",\"srcSet\":\"/static/0a992d200e8146e849bd5350b9256aee-7f526.jpg 1x,\\n/static/0a992d200e8146e849bd5350b9256aee-12b36.jpg 1.5x,\\n/static/0a992d200e8146e849bd5350b9256aee-f59e5.jpg 2x,\\n/static/0a992d200e8146e849bd5350b9256aee-4704a.jpg 3x\"}}]},\"author\":{\"id\":\"Myer Nore\",\"avatar\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg\",\"srcSet\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg 1x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-e6d15.jpg 1.5x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-b974e.jpg 2x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-89580.jpg 3x\"}}]}}}}},{\"node\":{\"fields\":{\"slug\":\"/steps/2018-02-25--variants/\"},\"timeToRead\":5,\"frontmatter\":{\"title\":\"Variants\",\"image\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/5dc86a763411f112f6bc01857ef6b383-7f526.jpg\",\"srcSet\":\"/static/5dc86a763411f112f6bc01857ef6b383-7f526.jpg 1x,\\n/static/5dc86a763411f112f6bc01857ef6b383-12b36.jpg 1.5x,\\n/static/5dc86a763411f112f6bc01857ef6b383-f59e5.jpg 2x,\\n/static/5dc86a763411f112f6bc01857ef6b383-4704a.jpg 3x\"}}]},\"author\":{\"id\":\"Myer Nore\",\"avatar\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg\",\"srcSet\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg 1x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-e6d15.jpg 1.5x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-b974e.jpg 2x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-89580.jpg 3x\"}}]}}}}},{\"node\":{\"fields\":{\"slug\":\"/steps/2018-02-23--records/\"},\"timeToRead\":3,\"frontmatter\":{\"title\":\"Records\",\"image\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/08d6e8e89f98423aecffd7e6315dbf34-7f526.jpg\",\"srcSet\":\"/static/08d6e8e89f98423aecffd7e6315dbf34-7f526.jpg 1x,\\n/static/08d6e8e89f98423aecffd7e6315dbf34-12b36.jpg 1.5x,\\n/static/08d6e8e89f98423aecffd7e6315dbf34-f59e5.jpg 2x,\\n/static/08d6e8e89f98423aecffd7e6315dbf34-4704a.jpg 3x\"}}]},\"author\":{\"id\":\"Myer Nore\",\"avatar\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg\",\"srcSet\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg 1x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-e6d15.jpg 1.5x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-b974e.jpg 2x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-89580.jpg 3x\"}}]}}}}}]}},\"pathContext\":{\"slug\":\"/steps/2018-03-06--maps/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/steps-2018-03-06-maps.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/steps-2018-03-06-maps.json\n// module chunks = 17851383758665"],"sourceRoot":""}