{"version":3,"sources":["webpack:///path---steps-2017-12-10-reason-lists-947633802ffb7a6497e3.js","webpack:///./.cache/json/steps-2017-12-10-reason-lists.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/steps-2017-12-10-reason-lists.json","module","exports","data","post","html","excerpt","timeToRead","fields","slug","frontmatter","tags","author","id","bio","twitter","avatar","children","responsiveResolution","src","srcSet","title","updatedDate","image","recents","edges","node","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,uFACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,KAAA,s9cAAioZC,QAAA,gJAAAC,WAAA,EAAAC,QAAq9EC,KAAA,oCAA0CC,aAAgBC,MAAA,SAAAC,QAA2BC,GAAA,YAAAC,IAAA,GAAAC,QAAA,YAAAC,QAA0DC,WAAaC,sBAAwBC,IAAA,qDAAAC,OAAA,+KAAkPC,MAAA,eAAAC,YAAA,eAAAC,OAA8DN,WAAaC,sBAAwBC,IAAA,qDAAAC,OAAA,wOAA2SI,SAAYC,QAAUC,MAAQlB,QAAUC,KAAA,+BAAqCF,WAAA,EAAAG,aAA+BW,MAAA,UAAAE,OAA2BN,WAAaC,sBAAwBC,IAAA,qDAAAC,OAAA,sOAAySR,QAAWC,GAAA,YAAAG,QAA2BC,WAAaC,sBAAwBC,IAAA,qDAAAC,OAAA,2OAA+SM,MAAQlB,QAAUC,KAAA,4BAAkCF,WAAA,EAAAG,aAA+BW,MAAA,OAAAE,OAAwBN,WAAaC,sBAAwBC,IAAA,qDAAAC,OAAA,sOAAySR,QAAWC,GAAA,YAAAG,QAA2BC,WAAaC,sBAAwBC,IAAA,qDAAAC,OAAA,2OAA+SM,MAAQlB,QAAUC,KAAA,+BAAqCF,WAAA,EAAAG,aAA+BW,MAAA,UAAAE,OAA2BN,WAAaC,sBAAwBC,IAAA,qDAAAC,OAAA,sOAAySR,QAAWC,GAAA,YAAAG,QAA2BC,WAAaC,sBAAwBC,IAAA,qDAAAC,OAAA,2OAA+SM,MAAQlB,QAAUC,KAAA,gCAAsCF,WAAA,EAAAG,aAA+BW,MAAA,WAAAE,OAA4BN,WAAaC,sBAAwBC,IAAA,qDAAAC,OAAA,sOAAySR,QAAWC,GAAA,YAAAG,QAA2BC,WAAaC,sBAAwBC,IAAA,qDAAAC,OAAA,6OAAgTO,aAAgBlB,KAAA","file":"path---steps-2017-12-10-reason-lists-947633802ffb7a6497e3.js","sourcesContent":["webpackJsonp([18031524593692],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/steps-2017-12-10-reason-lists.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"post\":{\"html\":\"<h2 id=\\\"intro-to-lists\\\"><a href=\\\"#intro-to-lists\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Intro to Lists</h2>\\n<p>A list in Reason OCaml is a <a href=\\\"https://en.wikipedia.org/wiki/Linked_list\\\">linked list</a>.\\nA List is divided into a single-element <code>head</code> and the rest of the list,\\ncalled the <code>tail</code>. Whenever you need random access to element of a collection, an\\nArray or a Record may be a better structure. A list is a great data container other times,\\nthough, in line with the <a href=\\\"https://en.wikipedia.org/wiki/Rule_of_least_power\\\">Rule of Least Power</a>.</p>\\n<p>The <a href=\\\"https://reasonml.github.io/guide/language/list-and-array\\\">Reason docs for lists are here</a>, and\\n<a href=\\\"https://reasonml.github.io/api/List.html\\\">the API docs for the List module are here</a>. </p>\\n<h2 id=\\\"list-pattern-matching-examples\\\"><a href=\\\"#list-pattern-matching-examples\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>List Pattern Matching Examples</h2>\\n<h3 id=\\\"listlength\\\"><a href=\\\"#listlength\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>List.length</h3>\\n<p>The standard library has a <a href=\\\"https://reasonml.github.io/api/List.html#VALlength\\\">List.length</a> function,\\nbut if it didn't already, here is one possible implementation that illustrates pattern matching on Lists:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n        <pre class=\\\"language-reason\\\"><code>let length = (list) => {\\n  let rec addUpLength = (innerList, currentTotal) => {\\n    switch innerList {\\n    | [] => currentTotal\\n    | [head, ...tail] => addUpLength(tail, currentTotal + 1)\\n    };\\n  };\\n  addUpLength(list, 0)\\n};\\n\\nlet cities = [\\\"New York\\\", \\\"Los Angeles\\\", \\\"Chicago\\\", \\\"Houston\\\", \\\"Phoenix\\\", \\n              \\\"Philadelphia\\\", \\\"San Antonio\\\", \\\"San Diego\\\", \\\"Dallas\\\", \\\"San Jose\\\", \\n              \\\"Austin\\\", \\\"Jacksonville\\\", \\\"San Francisco\\\", \\\"Columbus\\\", \\n              \\\"Indianapolis\\\", \\\"Fort Worth\\\", \\\"Charlotte\\\", \\\"Seattle\\\", \\\"Denver\\\"];\\n\\nJs.log(length(cities));</code></pre>\\n        </div>\\n<p>This shows how pattern matching can select empty lists <code>[]</code> as well as lists\\nin the <code>[head, ...tail]</code> syntax. In Reason the ellipsis <code>...</code> is meant to remind JS programmers\\nof <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters\\\">Rest parameters</a>,\\nas in \\\"get the rest of the list.\\\"</p>\\n<p>The <code>head</code> and <code>tail</code> variable names are not keywords here, they could be anything.\\nTry replacing the last case with <code>[foo, ...bar] => addUpLength(bar, currentTotal + 1)</code>.</p>\\n<p>This also shows how you can declare a utility function inside a function.\\nHere we're passing the total along in the parameter to the <code>addUpLength</code> function\\nto get <a href=\\\"https://en.wikipedia.org/wiki/Tail_call\\\">Tail Call Optimization</a>, which\\nis basically a fancy way of saying that it uses less memory since it accumulates\\nthe result in the <code>currentTotal</code> function parameter.</p>\\n<h3 id=\\\"return-every-other-element-in-a-list\\\"><a href=\\\"#return-every-other-element-in-a-list\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Return every other element in a list</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n        <pre class=\\\"language-reason\\\"><code>let rec odd_elements = (list) =>\\n  switch list {\\n  | [a, _, ...t] => [a, ...odd_elements(t)]\\n  | _ => list\\n  };\\n\\nlet rec even_elements = (list) =>\\n  switch list {\\n  | [_, a, ...t] => [a, ...even_elements(t)]\\n  | [_, ...t] => [...even_elements(t)] \\n  | _ => list\\n  };\\n\\nlet nums = [\\\"one\\\", \\\"two\\\", \\\"three\\\", \\\"four\\\", \\\"five\\\", \\\"six\\\", \\\"seven\\\"];\\n\\nJs.log(\\\"odd elements: \\\");\\nodd_elements(nums) |> List.iter(Js.log);\\nJs.log(\\\"\\\");\\n\\nJs.log(\\\"even elements: \\\");\\neven_elements(nums) |> List.iter(Js.log);</code></pre>\\n        </div>\\n<p>This example is powered by: </p>\\n<ul>\\n<li>the \\\"pipeline operator\\\" <code>|></code> from the <a href=\\\"https://reasonml.github.io/api/Pervasives.html#6_Compositionoperators\\\">Pervasives standard library</a>\\nDirect from the docs: \\\"Reverse-application operator: <code>x |> f |> g</code> is exactly equivalent to <code>g(f(x))</code>,\\\"\\nor, said another way, the output of x is put into f, and the output of f is put into g.</li>\\n<li><a href=\\\"https://reasonml.github.io/api/List.html#VALiter\\\">List.iter</a>, which takes a\\nfunction to execute on each item of an iterable, as well as a list to iterate over.\\nIn this case, the list to iterate over gets passed in via <code>|></code>, and the function to execute\\non each element is <code>Js.log</code>.</li>\\n</ul>\\n<h3 id=\\\"sum-over-a-list-of-booleans\\\"><a href=\\\"#sum-over-a-list-of-booleans\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Sum over a list of booleans</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n        <pre class=\\\"language-reason\\\"><code>let rec sum = (list) =>\\n  switch list {\\n  | [bool, ...t] => (bool ? 1 : 0) + sum(t)\\n  | _ => 0\\n  };\\n\\nlet nums = [false, true, true, false, true];\\n\\n/* should print 3 */\\nJs.log(sum(nums));</code></pre>\\n        </div>\\n<p>This example is powered by pattern matching and the <a href=\\\"https://reasonml.github.io/docs/en/if-else.html\\\">ternery sugar</a>. Many times in ReasonML, the \\\"batteries\\\" that are included\\nis just the pattern matching.</p>\\n<h2 id=\\\"list-searching\\\"><a href=\\\"#list-searching\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><a href=\\\"https://reasonml.github.io/api/List.html#6_Listsearching\\\">List Searching</a></h2>\\n<p>Here are some examples of searching lists. </p>\\n<h3 id=\\\"listfind---get-first-item-from-list-that-matches\\\"><a href=\\\"#listfind---get-first-item-from-list-that-matches\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>List.find - get first item from list that matches</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n        <pre class=\\\"language-reason\\\"><code>let cities = [\\\"New York\\\", \\\"Los Angeles\\\", \\\"Chicago\\\", \\\"Houston\\\", \\\"Phoenix\\\", \\n              \\\"Philadelphia\\\", \\\"San Antonio\\\", \\\"San Diego\\\", \\\"Dallas\\\", \\\"San Jose\\\", \\n              \\\"Austin\\\", \\\"Jacksonville\\\", \\\"San Francisco\\\", \\\"Columbus\\\", \\n              \\\"Indianapolis\\\", \\\"Fort Worth\\\", \\\"Charlotte\\\", \\\"Seattle\\\", \\\"Denver\\\"];\\n\\nlet isInList = (inList, searchForItem) =>\\n  switch (List.find((i) => i === searchForItem, inList)) {\\n  | item => print_endline(searchForItem ++ \\\" found!\\\")\\n  | exception Not_found => print_endline(searchForItem ++ \\\": not found!\\\")\\n  };\\n\\nisInList(cities, \\\"Charlotte\\\");\\nisInList(cities, \\\"Boston\\\");</code></pre>\\n        </div>\\n<p>This example is powered by: </p>\\n<ul>\\n<li><a href=\\\"https://reasonml.github.io/api/Pervasives.html#7_Outputfunctionsonstandardoutput\\\">Pervasives.print_endline</a></li>\\n<li><a href=\\\"https://reasonml.github.io/guide/language/pattern-matching/#match-on-exceptions\\\">Pattern matching on exceptions</a></li>\\n</ul>\\n<h3 id=\\\"listfilter-a-list-of-strings-by-length\\\"><a href=\\\"#listfilter-a-list-of-strings-by-length\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>List.filter a list of strings by length</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n        <pre class=\\\"language-reason\\\"><code>let myStrs = [\\\"\\\", \\\"a\\\", \\\"ab\\\", \\\"abc\\\", \\\"abcd\\\", \\\"abcde\\\", \\\"abcdef\\\"];\\nmyStrs \\n\\t|> List.filter((mystr) => String.length(mystr) > 3) \\n\\t|> List.iter(Js.log)</code></pre>\\n        </div>\\n<p>This example is powered by:</p>\\n<ul>\\n<li>the \\\"pipeline operator\\\" <code>|></code> as mentioned above</li>\\n<li><a href=\\\"https://reasonml.github.io/api/String.html#VALlength\\\">String.length</a></li>\\n<li><a href=\\\"https://reasonml.github.io/api/List.html#VALfilter\\\">List.filter</a>, which takes a function that returns a boolean </li>\\n<li><a href=\\\"https://reasonml.github.io/api/List.html#VALiter\\\">List.iter</a>, as mentioned above</li>\\n</ul>\\n<h3 id=\\\"listfilter-a-list-of-strings-by-a-search-string\\\"><a href=\\\"#listfilter-a-list-of-strings-by-a-search-string\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>List.filter a list of strings by a search string</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n        <pre class=\\\"language-reason\\\"><code>let str1InsideStr2 = (s1, s2) => Js.Re.fromString(s1) |> Js.Re.test(s2);\\n\\nlet cities = [\\\"New York\\\", \\\"Los Angeles\\\", \\\"Chicago\\\", \\\"Houston\\\", \\\"Phoenix\\\", \\n              \\\"Philadelphia\\\", \\\"San Antonio\\\", \\\"San Diego\\\", \\\"Dallas\\\", \\\"San Jose\\\", \\n              \\\"Austin\\\", \\\"Jacksonville\\\", \\\"San Francisco\\\", \\\"Columbus\\\", \\n              \\\"Indianapolis\\\", \\\"Fort Worth\\\", \\\"Charlotte\\\", \\\"Seattle\\\", \\\"Denver\\\"];\\n              \\nlet searcher = str1InsideStr2(\\\"San\\\");\\n\\nlet searchResults = cities\\n  |> List.filter(searcher)\\n  |> List.iter(Js.log);</code></pre>\\n        </div>\\n<p>In addition to <code>|></code>, <code>filter</code> and <code>iter</code> from above, this example is powered by: </p>\\n<ul>\\n<li><a href=\\\"https://bucklescript.github.io/bucklescript/api/Js.Re.html\\\">Js.Re from bucklescript</a>,\\nwhich is linked to as the appropriate regex solution in <a href=\\\"https://reasonml.github.io/guide/language/string-and-char\\\">the Reason docs</a>.</li>\\n<li><a href=\\\"https://reasonml.github.io/guide/language/function#currying\\\">currying</a>, when we called\\n<code>str1InsideStr2(s1, s2)</code> twice, first with the parameter \\\"San\\\" to search for, and second as the callback\\nto filter. </li>\\n</ul>\\n<h2 id=\\\"list-explorations\\\"><a href=\\\"#list-explorations\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>List: Explorations</h2>\\n<p>Write a function that, given a list, </p>\\n<ol>\\n<li>... and a number <em>n</em>, returns the first <em>n</em> items of the list.</li>\\n<li>... and a number <em>n</em>, returns the last <em>n</em> items of the list.</li>\\n<li>... returns the list reversed.</li>\\n<li>... returns the palindrome of that list.</li>\\n<li>... and an item <em>i</em>, returns the first index of i in the list, and -1 otherwise.</li>\\n</ol>\\n<p>Image Credit: <a href=\\\"https://www.flickr.com/photos/eatmorechips/4409864210/in/photolist-RTupz-89gRpz-bmUhXz-4DRFUr-3dVPg-5abzWy-6rHgR1-89gQNP-6xCxfo-89gN2F-7Ujixw-89gU5r-89k4Ky-dSzDtN-7WBfAg-89gNJV-3mB89t-B5fMhw-cG8Pxm-9VG1S8-8b97w-63QX9B-rkYzrp-y5Vct-kLouK-98D7Uc-98Gffq-VvDvrd-98D6uM-po287f-QAXg39-wDFdbC-xzSiSQ-8DqirA-VvDvXJ-wiFftw-MpjHo7-KZD1N5-L1DEi2-LXdKcv-pSFpw7-b2VdLz-98GdLS-89gTrt-89k2Ad-7HFGZy-72NR3g-6jeekC-6hm77B-5h5qPj/\\\"><em>List</em> by Nik Stanbridge on Flickr</a></p>\\n<p>(<em>Edit this post\\n<a href=\\\"https://github.com/codekiln/gradus-reason/tree/master/data/steps/2017-12-10--reason-lists/index.md\\\">here</a>!</em>)</p>\",\"excerpt\":\"Intro to Lists A list in Reason OCaml is a  linked list . \\nA List is divided into a single-element   and the rest of the list, \\ncalled the…\",\"timeToRead\":7,\"fields\":{\"slug\":\"/steps/2017-12-10--reason-lists/\"},\"frontmatter\":{\"tags\":[\"lists\"],\"author\":{\"id\":\"Myer Nore\",\"bio\":\"\",\"twitter\":\"@MyerNore\",\"avatar\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-03c1e.jpg\",\"srcSet\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-03c1e.jpg 1x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-95a48.jpg 1.5x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-cc0c5.jpg 2x\"}}]}},\"title\":\"Reason Lists\",\"updatedDate\":\"Dec 10, 2017\",\"image\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/212cf6cc92738c4a6073f1035268089a-936ba.jpg\",\"srcSet\":\"/static/212cf6cc92738c4a6073f1035268089a-936ba.jpg 1x,\\n/static/212cf6cc92738c4a6073f1035268089a-1afa9.jpg 1.5x,\\n/static/212cf6cc92738c4a6073f1035268089a-e5a09.jpg 2x,\\n/static/212cf6cc92738c4a6073f1035268089a-25bb3.jpg 3x\"}}]}}},\"recents\":{\"edges\":[{\"node\":{\"fields\":{\"slug\":\"/steps/2018-03-14--modules/\"},\"timeToRead\":6,\"frontmatter\":{\"title\":\"Modules\",\"image\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/4b207212da2130c54d5d3f3c6852486b-7f526.jpg\",\"srcSet\":\"/static/4b207212da2130c54d5d3f3c6852486b-7f526.jpg 1x,\\n/static/4b207212da2130c54d5d3f3c6852486b-12b36.jpg 1.5x,\\n/static/4b207212da2130c54d5d3f3c6852486b-f59e5.jpg 2x,\\n/static/4b207212da2130c54d5d3f3c6852486b-4704a.jpg 3x\"}}]},\"author\":{\"id\":\"Myer Nore\",\"avatar\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg\",\"srcSet\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg 1x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-e6d15.jpg 1.5x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-b974e.jpg 2x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-89580.jpg 3x\"}}]}}}}},{\"node\":{\"fields\":{\"slug\":\"/steps/2018-03-06--maps/\"},\"timeToRead\":5,\"frontmatter\":{\"title\":\"Maps\",\"image\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/502660d3a6174f3c7a7553e0a1b971c9-7f526.jpg\",\"srcSet\":\"/static/502660d3a6174f3c7a7553e0a1b971c9-7f526.jpg 1x,\\n/static/502660d3a6174f3c7a7553e0a1b971c9-12b36.jpg 1.5x,\\n/static/502660d3a6174f3c7a7553e0a1b971c9-f59e5.jpg 2x,\\n/static/502660d3a6174f3c7a7553e0a1b971c9-4704a.jpg 3x\"}}]},\"author\":{\"id\":\"Myer Nore\",\"avatar\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg\",\"srcSet\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg 1x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-e6d15.jpg 1.5x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-b974e.jpg 2x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-89580.jpg 3x\"}}]}}}}},{\"node\":{\"fields\":{\"slug\":\"/steps/2018-03-02--objects/\"},\"timeToRead\":2,\"frontmatter\":{\"title\":\"Objects\",\"image\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/0a992d200e8146e849bd5350b9256aee-7f526.jpg\",\"srcSet\":\"/static/0a992d200e8146e849bd5350b9256aee-7f526.jpg 1x,\\n/static/0a992d200e8146e849bd5350b9256aee-12b36.jpg 1.5x,\\n/static/0a992d200e8146e849bd5350b9256aee-f59e5.jpg 2x,\\n/static/0a992d200e8146e849bd5350b9256aee-4704a.jpg 3x\"}}]},\"author\":{\"id\":\"Myer Nore\",\"avatar\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg\",\"srcSet\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg 1x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-e6d15.jpg 1.5x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-b974e.jpg 2x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-89580.jpg 3x\"}}]}}}}},{\"node\":{\"fields\":{\"slug\":\"/steps/2018-02-25--variants/\"},\"timeToRead\":5,\"frontmatter\":{\"title\":\"Variants\",\"image\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/5dc86a763411f112f6bc01857ef6b383-7f526.jpg\",\"srcSet\":\"/static/5dc86a763411f112f6bc01857ef6b383-7f526.jpg 1x,\\n/static/5dc86a763411f112f6bc01857ef6b383-12b36.jpg 1.5x,\\n/static/5dc86a763411f112f6bc01857ef6b383-f59e5.jpg 2x,\\n/static/5dc86a763411f112f6bc01857ef6b383-4704a.jpg 3x\"}}]},\"author\":{\"id\":\"Myer Nore\",\"avatar\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg\",\"srcSet\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg 1x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-e6d15.jpg 1.5x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-b974e.jpg 2x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-89580.jpg 3x\"}}]}}}}}]}},\"pathContext\":{\"slug\":\"/steps/2017-12-10--reason-lists/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---steps-2017-12-10-reason-lists-947633802ffb7a6497e3.js","module.exports = {\"data\":{\"post\":{\"html\":\"<h2 id=\\\"intro-to-lists\\\"><a href=\\\"#intro-to-lists\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Intro to Lists</h2>\\n<p>A list in Reason OCaml is a <a href=\\\"https://en.wikipedia.org/wiki/Linked_list\\\">linked list</a>.\\nA List is divided into a single-element <code>head</code> and the rest of the list,\\ncalled the <code>tail</code>. Whenever you need random access to element of a collection, an\\nArray or a Record may be a better structure. A list is a great data container other times,\\nthough, in line with the <a href=\\\"https://en.wikipedia.org/wiki/Rule_of_least_power\\\">Rule of Least Power</a>.</p>\\n<p>The <a href=\\\"https://reasonml.github.io/guide/language/list-and-array\\\">Reason docs for lists are here</a>, and\\n<a href=\\\"https://reasonml.github.io/api/List.html\\\">the API docs for the List module are here</a>. </p>\\n<h2 id=\\\"list-pattern-matching-examples\\\"><a href=\\\"#list-pattern-matching-examples\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>List Pattern Matching Examples</h2>\\n<h3 id=\\\"listlength\\\"><a href=\\\"#listlength\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>List.length</h3>\\n<p>The standard library has a <a href=\\\"https://reasonml.github.io/api/List.html#VALlength\\\">List.length</a> function,\\nbut if it didn't already, here is one possible implementation that illustrates pattern matching on Lists:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n        <pre class=\\\"language-reason\\\"><code>let length = (list) => {\\n  let rec addUpLength = (innerList, currentTotal) => {\\n    switch innerList {\\n    | [] => currentTotal\\n    | [head, ...tail] => addUpLength(tail, currentTotal + 1)\\n    };\\n  };\\n  addUpLength(list, 0)\\n};\\n\\nlet cities = [\\\"New York\\\", \\\"Los Angeles\\\", \\\"Chicago\\\", \\\"Houston\\\", \\\"Phoenix\\\", \\n              \\\"Philadelphia\\\", \\\"San Antonio\\\", \\\"San Diego\\\", \\\"Dallas\\\", \\\"San Jose\\\", \\n              \\\"Austin\\\", \\\"Jacksonville\\\", \\\"San Francisco\\\", \\\"Columbus\\\", \\n              \\\"Indianapolis\\\", \\\"Fort Worth\\\", \\\"Charlotte\\\", \\\"Seattle\\\", \\\"Denver\\\"];\\n\\nJs.log(length(cities));</code></pre>\\n        </div>\\n<p>This shows how pattern matching can select empty lists <code>[]</code> as well as lists\\nin the <code>[head, ...tail]</code> syntax. In Reason the ellipsis <code>...</code> is meant to remind JS programmers\\nof <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters\\\">Rest parameters</a>,\\nas in \\\"get the rest of the list.\\\"</p>\\n<p>The <code>head</code> and <code>tail</code> variable names are not keywords here, they could be anything.\\nTry replacing the last case with <code>[foo, ...bar] => addUpLength(bar, currentTotal + 1)</code>.</p>\\n<p>This also shows how you can declare a utility function inside a function.\\nHere we're passing the total along in the parameter to the <code>addUpLength</code> function\\nto get <a href=\\\"https://en.wikipedia.org/wiki/Tail_call\\\">Tail Call Optimization</a>, which\\nis basically a fancy way of saying that it uses less memory since it accumulates\\nthe result in the <code>currentTotal</code> function parameter.</p>\\n<h3 id=\\\"return-every-other-element-in-a-list\\\"><a href=\\\"#return-every-other-element-in-a-list\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Return every other element in a list</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n        <pre class=\\\"language-reason\\\"><code>let rec odd_elements = (list) =>\\n  switch list {\\n  | [a, _, ...t] => [a, ...odd_elements(t)]\\n  | _ => list\\n  };\\n\\nlet rec even_elements = (list) =>\\n  switch list {\\n  | [_, a, ...t] => [a, ...even_elements(t)]\\n  | [_, ...t] => [...even_elements(t)] \\n  | _ => list\\n  };\\n\\nlet nums = [\\\"one\\\", \\\"two\\\", \\\"three\\\", \\\"four\\\", \\\"five\\\", \\\"six\\\", \\\"seven\\\"];\\n\\nJs.log(\\\"odd elements: \\\");\\nodd_elements(nums) |> List.iter(Js.log);\\nJs.log(\\\"\\\");\\n\\nJs.log(\\\"even elements: \\\");\\neven_elements(nums) |> List.iter(Js.log);</code></pre>\\n        </div>\\n<p>This example is powered by: </p>\\n<ul>\\n<li>the \\\"pipeline operator\\\" <code>|></code> from the <a href=\\\"https://reasonml.github.io/api/Pervasives.html#6_Compositionoperators\\\">Pervasives standard library</a>\\nDirect from the docs: \\\"Reverse-application operator: <code>x |> f |> g</code> is exactly equivalent to <code>g(f(x))</code>,\\\"\\nor, said another way, the output of x is put into f, and the output of f is put into g.</li>\\n<li><a href=\\\"https://reasonml.github.io/api/List.html#VALiter\\\">List.iter</a>, which takes a\\nfunction to execute on each item of an iterable, as well as a list to iterate over.\\nIn this case, the list to iterate over gets passed in via <code>|></code>, and the function to execute\\non each element is <code>Js.log</code>.</li>\\n</ul>\\n<h3 id=\\\"sum-over-a-list-of-booleans\\\"><a href=\\\"#sum-over-a-list-of-booleans\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Sum over a list of booleans</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n        <pre class=\\\"language-reason\\\"><code>let rec sum = (list) =>\\n  switch list {\\n  | [bool, ...t] => (bool ? 1 : 0) + sum(t)\\n  | _ => 0\\n  };\\n\\nlet nums = [false, true, true, false, true];\\n\\n/* should print 3 */\\nJs.log(sum(nums));</code></pre>\\n        </div>\\n<p>This example is powered by pattern matching and the <a href=\\\"https://reasonml.github.io/docs/en/if-else.html\\\">ternery sugar</a>. Many times in ReasonML, the \\\"batteries\\\" that are included\\nis just the pattern matching.</p>\\n<h2 id=\\\"list-searching\\\"><a href=\\\"#list-searching\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><a href=\\\"https://reasonml.github.io/api/List.html#6_Listsearching\\\">List Searching</a></h2>\\n<p>Here are some examples of searching lists. </p>\\n<h3 id=\\\"listfind---get-first-item-from-list-that-matches\\\"><a href=\\\"#listfind---get-first-item-from-list-that-matches\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>List.find - get first item from list that matches</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n        <pre class=\\\"language-reason\\\"><code>let cities = [\\\"New York\\\", \\\"Los Angeles\\\", \\\"Chicago\\\", \\\"Houston\\\", \\\"Phoenix\\\", \\n              \\\"Philadelphia\\\", \\\"San Antonio\\\", \\\"San Diego\\\", \\\"Dallas\\\", \\\"San Jose\\\", \\n              \\\"Austin\\\", \\\"Jacksonville\\\", \\\"San Francisco\\\", \\\"Columbus\\\", \\n              \\\"Indianapolis\\\", \\\"Fort Worth\\\", \\\"Charlotte\\\", \\\"Seattle\\\", \\\"Denver\\\"];\\n\\nlet isInList = (inList, searchForItem) =>\\n  switch (List.find((i) => i === searchForItem, inList)) {\\n  | item => print_endline(searchForItem ++ \\\" found!\\\")\\n  | exception Not_found => print_endline(searchForItem ++ \\\": not found!\\\")\\n  };\\n\\nisInList(cities, \\\"Charlotte\\\");\\nisInList(cities, \\\"Boston\\\");</code></pre>\\n        </div>\\n<p>This example is powered by: </p>\\n<ul>\\n<li><a href=\\\"https://reasonml.github.io/api/Pervasives.html#7_Outputfunctionsonstandardoutput\\\">Pervasives.print_endline</a></li>\\n<li><a href=\\\"https://reasonml.github.io/guide/language/pattern-matching/#match-on-exceptions\\\">Pattern matching on exceptions</a></li>\\n</ul>\\n<h3 id=\\\"listfilter-a-list-of-strings-by-length\\\"><a href=\\\"#listfilter-a-list-of-strings-by-length\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>List.filter a list of strings by length</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n        <pre class=\\\"language-reason\\\"><code>let myStrs = [\\\"\\\", \\\"a\\\", \\\"ab\\\", \\\"abc\\\", \\\"abcd\\\", \\\"abcde\\\", \\\"abcdef\\\"];\\nmyStrs \\n\\t|> List.filter((mystr) => String.length(mystr) > 3) \\n\\t|> List.iter(Js.log)</code></pre>\\n        </div>\\n<p>This example is powered by:</p>\\n<ul>\\n<li>the \\\"pipeline operator\\\" <code>|></code> as mentioned above</li>\\n<li><a href=\\\"https://reasonml.github.io/api/String.html#VALlength\\\">String.length</a></li>\\n<li><a href=\\\"https://reasonml.github.io/api/List.html#VALfilter\\\">List.filter</a>, which takes a function that returns a boolean </li>\\n<li><a href=\\\"https://reasonml.github.io/api/List.html#VALiter\\\">List.iter</a>, as mentioned above</li>\\n</ul>\\n<h3 id=\\\"listfilter-a-list-of-strings-by-a-search-string\\\"><a href=\\\"#listfilter-a-list-of-strings-by-a-search-string\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>List.filter a list of strings by a search string</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n        <pre class=\\\"language-reason\\\"><code>let str1InsideStr2 = (s1, s2) => Js.Re.fromString(s1) |> Js.Re.test(s2);\\n\\nlet cities = [\\\"New York\\\", \\\"Los Angeles\\\", \\\"Chicago\\\", \\\"Houston\\\", \\\"Phoenix\\\", \\n              \\\"Philadelphia\\\", \\\"San Antonio\\\", \\\"San Diego\\\", \\\"Dallas\\\", \\\"San Jose\\\", \\n              \\\"Austin\\\", \\\"Jacksonville\\\", \\\"San Francisco\\\", \\\"Columbus\\\", \\n              \\\"Indianapolis\\\", \\\"Fort Worth\\\", \\\"Charlotte\\\", \\\"Seattle\\\", \\\"Denver\\\"];\\n              \\nlet searcher = str1InsideStr2(\\\"San\\\");\\n\\nlet searchResults = cities\\n  |> List.filter(searcher)\\n  |> List.iter(Js.log);</code></pre>\\n        </div>\\n<p>In addition to <code>|></code>, <code>filter</code> and <code>iter</code> from above, this example is powered by: </p>\\n<ul>\\n<li><a href=\\\"https://bucklescript.github.io/bucklescript/api/Js.Re.html\\\">Js.Re from bucklescript</a>,\\nwhich is linked to as the appropriate regex solution in <a href=\\\"https://reasonml.github.io/guide/language/string-and-char\\\">the Reason docs</a>.</li>\\n<li><a href=\\\"https://reasonml.github.io/guide/language/function#currying\\\">currying</a>, when we called\\n<code>str1InsideStr2(s1, s2)</code> twice, first with the parameter \\\"San\\\" to search for, and second as the callback\\nto filter. </li>\\n</ul>\\n<h2 id=\\\"list-explorations\\\"><a href=\\\"#list-explorations\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>List: Explorations</h2>\\n<p>Write a function that, given a list, </p>\\n<ol>\\n<li>... and a number <em>n</em>, returns the first <em>n</em> items of the list.</li>\\n<li>... and a number <em>n</em>, returns the last <em>n</em> items of the list.</li>\\n<li>... returns the list reversed.</li>\\n<li>... returns the palindrome of that list.</li>\\n<li>... and an item <em>i</em>, returns the first index of i in the list, and -1 otherwise.</li>\\n</ol>\\n<p>Image Credit: <a href=\\\"https://www.flickr.com/photos/eatmorechips/4409864210/in/photolist-RTupz-89gRpz-bmUhXz-4DRFUr-3dVPg-5abzWy-6rHgR1-89gQNP-6xCxfo-89gN2F-7Ujixw-89gU5r-89k4Ky-dSzDtN-7WBfAg-89gNJV-3mB89t-B5fMhw-cG8Pxm-9VG1S8-8b97w-63QX9B-rkYzrp-y5Vct-kLouK-98D7Uc-98Gffq-VvDvrd-98D6uM-po287f-QAXg39-wDFdbC-xzSiSQ-8DqirA-VvDvXJ-wiFftw-MpjHo7-KZD1N5-L1DEi2-LXdKcv-pSFpw7-b2VdLz-98GdLS-89gTrt-89k2Ad-7HFGZy-72NR3g-6jeekC-6hm77B-5h5qPj/\\\"><em>List</em> by Nik Stanbridge on Flickr</a></p>\\n<p>(<em>Edit this post\\n<a href=\\\"https://github.com/codekiln/gradus-reason/tree/master/data/steps/2017-12-10--reason-lists/index.md\\\">here</a>!</em>)</p>\",\"excerpt\":\"Intro to Lists A list in Reason OCaml is a  linked list . \\nA List is divided into a single-element   and the rest of the list, \\ncalled the…\",\"timeToRead\":7,\"fields\":{\"slug\":\"/steps/2017-12-10--reason-lists/\"},\"frontmatter\":{\"tags\":[\"lists\"],\"author\":{\"id\":\"Myer Nore\",\"bio\":\"\",\"twitter\":\"@MyerNore\",\"avatar\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-03c1e.jpg\",\"srcSet\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-03c1e.jpg 1x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-95a48.jpg 1.5x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-cc0c5.jpg 2x\"}}]}},\"title\":\"Reason Lists\",\"updatedDate\":\"Dec 10, 2017\",\"image\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/212cf6cc92738c4a6073f1035268089a-936ba.jpg\",\"srcSet\":\"/static/212cf6cc92738c4a6073f1035268089a-936ba.jpg 1x,\\n/static/212cf6cc92738c4a6073f1035268089a-1afa9.jpg 1.5x,\\n/static/212cf6cc92738c4a6073f1035268089a-e5a09.jpg 2x,\\n/static/212cf6cc92738c4a6073f1035268089a-25bb3.jpg 3x\"}}]}}},\"recents\":{\"edges\":[{\"node\":{\"fields\":{\"slug\":\"/steps/2018-03-14--modules/\"},\"timeToRead\":6,\"frontmatter\":{\"title\":\"Modules\",\"image\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/4b207212da2130c54d5d3f3c6852486b-7f526.jpg\",\"srcSet\":\"/static/4b207212da2130c54d5d3f3c6852486b-7f526.jpg 1x,\\n/static/4b207212da2130c54d5d3f3c6852486b-12b36.jpg 1.5x,\\n/static/4b207212da2130c54d5d3f3c6852486b-f59e5.jpg 2x,\\n/static/4b207212da2130c54d5d3f3c6852486b-4704a.jpg 3x\"}}]},\"author\":{\"id\":\"Myer Nore\",\"avatar\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg\",\"srcSet\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg 1x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-e6d15.jpg 1.5x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-b974e.jpg 2x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-89580.jpg 3x\"}}]}}}}},{\"node\":{\"fields\":{\"slug\":\"/steps/2018-03-06--maps/\"},\"timeToRead\":5,\"frontmatter\":{\"title\":\"Maps\",\"image\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/502660d3a6174f3c7a7553e0a1b971c9-7f526.jpg\",\"srcSet\":\"/static/502660d3a6174f3c7a7553e0a1b971c9-7f526.jpg 1x,\\n/static/502660d3a6174f3c7a7553e0a1b971c9-12b36.jpg 1.5x,\\n/static/502660d3a6174f3c7a7553e0a1b971c9-f59e5.jpg 2x,\\n/static/502660d3a6174f3c7a7553e0a1b971c9-4704a.jpg 3x\"}}]},\"author\":{\"id\":\"Myer Nore\",\"avatar\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg\",\"srcSet\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg 1x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-e6d15.jpg 1.5x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-b974e.jpg 2x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-89580.jpg 3x\"}}]}}}}},{\"node\":{\"fields\":{\"slug\":\"/steps/2018-03-02--objects/\"},\"timeToRead\":2,\"frontmatter\":{\"title\":\"Objects\",\"image\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/0a992d200e8146e849bd5350b9256aee-7f526.jpg\",\"srcSet\":\"/static/0a992d200e8146e849bd5350b9256aee-7f526.jpg 1x,\\n/static/0a992d200e8146e849bd5350b9256aee-12b36.jpg 1.5x,\\n/static/0a992d200e8146e849bd5350b9256aee-f59e5.jpg 2x,\\n/static/0a992d200e8146e849bd5350b9256aee-4704a.jpg 3x\"}}]},\"author\":{\"id\":\"Myer Nore\",\"avatar\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg\",\"srcSet\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg 1x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-e6d15.jpg 1.5x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-b974e.jpg 2x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-89580.jpg 3x\"}}]}}}}},{\"node\":{\"fields\":{\"slug\":\"/steps/2018-02-25--variants/\"},\"timeToRead\":5,\"frontmatter\":{\"title\":\"Variants\",\"image\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/5dc86a763411f112f6bc01857ef6b383-7f526.jpg\",\"srcSet\":\"/static/5dc86a763411f112f6bc01857ef6b383-7f526.jpg 1x,\\n/static/5dc86a763411f112f6bc01857ef6b383-12b36.jpg 1.5x,\\n/static/5dc86a763411f112f6bc01857ef6b383-f59e5.jpg 2x,\\n/static/5dc86a763411f112f6bc01857ef6b383-4704a.jpg 3x\"}}]},\"author\":{\"id\":\"Myer Nore\",\"avatar\":{\"children\":[{\"responsiveResolution\":{\"src\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg\",\"srcSet\":\"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg 1x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-e6d15.jpg 1.5x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-b974e.jpg 2x,\\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-89580.jpg 3x\"}}]}}}}}]}},\"pathContext\":{\"slug\":\"/steps/2017-12-10--reason-lists/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/steps-2017-12-10-reason-lists.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/steps-2017-12-10-reason-lists.json\n// module chunks = 18031524593692"],"sourceRoot":""}