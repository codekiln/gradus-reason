webpackJsonp([0x7d1aa5ba20b3],{"./node_modules/json-loader/index.js!./.cache/json/steps-2018-03-02-objects.json":function(e,t){e.exports={data:{post:{html:'<h2 id="how-is-an-object-different-from-a-record"><a href="#how-is-an-object-different-from-a-record" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>How is an Object different from a Record?</h2>\n<p>Here is an example that declares a Record and compares it with the\nequivalent Object definition.</p>\n<div class="gatsby-highlight">\n        <pre class="language-reason"><code>/* Part 1 ----- Records Example ----- */\n/* declare a record type */\ntype contactRecord = {\n  name: string,\n  twitter: option(string)\n};\n\nlet printContactRec = (contact: contactRecord) =>\n  switch contact.twitter {\n  | Some(tw) => Js.log(contact.name ++ " has twitter " ++ tw)\n  | None => Js.log(contact.name ++ " doesn\'t have a twitter")\n  };\n\n/*\n instantiate a record with type contactRecord\n (note: the type annotation is optional)\n */\nlet contactRec: contactRecord = {\n  name: "Donald Knuth",\n  twitter: None\n};\n\nprintContactRec(contactRec);\n\n/* Part 2 ---- Objects Example ----- */\n/* declare a "closed" object type - note the single period {. */\ntype contactObj = {\n  .\n  name: string,\n  twitter: option(string)\n};\n\nlet printContactObj = (contact: contactObj) =>\n  switch contact#twitter {\n  | Some(tw) => Js.log(contact#name ++ " has twitter " ++ tw)\n  | None => Js.log(contact#name ++ " doesn\'t have a twitter")\n  };\n\nlet myContact: contactObj = {\n  pub name = "Kehinde Wiley";\n  pub twitter = Some("@kehindewileyart")\n};\n\nprintContactObj(myContact);</code></pre>\n        </div>\n<h2 id="what-are-objects-used-for"><a href="#what-are-objects-used-for" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>What are Objects used for?</h2>\n<p>Many people do not know what leeks are good for in cooking, so there is a\nproverb: <em>"An onion too strong, a chive too weak? Don\'t be afraid to use a leek."</em>\nSimilarly, in ReasonML, many people don\'t quite know what to do with Reason Objects.</p>\n<p><a href="https://ocaml.org/learn/history.html"><em>A History of OCaml</em></a>,\nreports that OCaml was originally CAML, or <em>Categorical Abstract Machine Language</em>, and\na variant called emerged in 1996 called <em>Objective Caml</em> that, in 2011,\nbecame known as <em>OCaml</em>. Objects were added to OCaml / ReasonML to bring\nObject Oriented Programming / OOP into the language.</p>\n<p>Like Records and Tuples, and they group attributes into a data structure.\nUnlike Records, they have a concept of private and public methods, and\ncan hide state inside. Unlike Tuples, the attributes are named and unordered.\nPerhaps we should say,\n<em>"A record too rigid, a tuple too direct? Don\'t be afraid to use an object."</em></p>\n<h2 id="object---links"><a href="#object---links" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Object - Links</h2>\n<ul>\n<li><a href="https://reasonml.github.io/docs/en/object.html">Reason Docs on Objects</a></li>\n<li><a href="https://realworldocaml.org/v1/en/html/objects.html">Real World OCaml on Objects</a></li>\n</ul>\n<p>Image Credit: <a href="https://www.flickr.com/photos/kim-anh-doan/10067272885/in/faves-74885459@N00/"><em>Objects</em> by kim anh on Flickr</a></p>\n<p><em><a href="https://github.com/codekiln/gradus-reason/tree/master/data/steps/2018-03-02--objects/index.md">Edit this post here</a></em></p>',excerpt:"How is an Object different from a Record? Here is an example that declares a Record and compares it with the\nequivalent Object definitionâ€¦",timeToRead:2,fields:{slug:"/steps/2018-03-02--objects/"},frontmatter:{tags:["objects","records","json"],author:{id:"Myer Nore",bio:"",twitter:"@MyerNore",avatar:{children:[{responsiveResolution:{src:"/static/eebd74c7dad24cbd53ab5eee2861fe0b-03c1e.jpg",srcSet:"/static/eebd74c7dad24cbd53ab5eee2861fe0b-03c1e.jpg 1x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-95a48.jpg 1.5x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-cc0c5.jpg 2x"}}]}},title:"Objects",updatedDate:"Mar 2, 2018",image:{children:[{responsiveResolution:{src:"/static/0a992d200e8146e849bd5350b9256aee-936ba.jpg",srcSet:"/static/0a992d200e8146e849bd5350b9256aee-936ba.jpg 1x,\n/static/0a992d200e8146e849bd5350b9256aee-1afa9.jpg 1.5x"}}]}}},recents:{edges:[{node:{fields:{slug:"/steps/2018-03-14--modules/"},timeToRead:6,frontmatter:{title:"Modules",image:{children:[{responsiveResolution:{src:"/static/4b207212da2130c54d5d3f3c6852486b-7f526.jpg",srcSet:"/static/4b207212da2130c54d5d3f3c6852486b-7f526.jpg 1x,\n/static/4b207212da2130c54d5d3f3c6852486b-12b36.jpg 1.5x,\n/static/4b207212da2130c54d5d3f3c6852486b-f59e5.jpg 2x,\n/static/4b207212da2130c54d5d3f3c6852486b-4704a.jpg 3x"}}]},author:{id:"Myer Nore",avatar:{children:[{responsiveResolution:{src:"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg",srcSet:"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg 1x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-e6d15.jpg 1.5x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-b974e.jpg 2x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-89580.jpg 3x"}}]}}}}},{node:{fields:{slug:"/steps/2018-03-06--maps/"},timeToRead:5,frontmatter:{title:"Maps",image:{children:[{responsiveResolution:{src:"/static/502660d3a6174f3c7a7553e0a1b971c9-7f526.jpg",srcSet:"/static/502660d3a6174f3c7a7553e0a1b971c9-7f526.jpg 1x,\n/static/502660d3a6174f3c7a7553e0a1b971c9-12b36.jpg 1.5x,\n/static/502660d3a6174f3c7a7553e0a1b971c9-f59e5.jpg 2x,\n/static/502660d3a6174f3c7a7553e0a1b971c9-4704a.jpg 3x"}}]},author:{id:"Myer Nore",avatar:{children:[{responsiveResolution:{src:"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg",srcSet:"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg 1x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-e6d15.jpg 1.5x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-b974e.jpg 2x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-89580.jpg 3x"}}]}}}}},{node:{fields:{slug:"/steps/2018-02-25--variants/"},timeToRead:5,frontmatter:{title:"Variants",image:{children:[{responsiveResolution:{src:"/static/5dc86a763411f112f6bc01857ef6b383-7f526.jpg",srcSet:"/static/5dc86a763411f112f6bc01857ef6b383-7f526.jpg 1x,\n/static/5dc86a763411f112f6bc01857ef6b383-12b36.jpg 1.5x,\n/static/5dc86a763411f112f6bc01857ef6b383-f59e5.jpg 2x,\n/static/5dc86a763411f112f6bc01857ef6b383-4704a.jpg 3x"}}]},author:{id:"Myer Nore",avatar:{children:[{responsiveResolution:{src:"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg",srcSet:"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg 1x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-e6d15.jpg 1.5x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-b974e.jpg 2x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-89580.jpg 3x"}}]}}}}},{node:{fields:{slug:"/steps/2018-02-23--records/"},timeToRead:3,frontmatter:{title:"Records",image:{children:[{responsiveResolution:{src:"/static/08d6e8e89f98423aecffd7e6315dbf34-7f526.jpg",srcSet:"/static/08d6e8e89f98423aecffd7e6315dbf34-7f526.jpg 1x,\n/static/08d6e8e89f98423aecffd7e6315dbf34-12b36.jpg 1.5x,\n/static/08d6e8e89f98423aecffd7e6315dbf34-f59e5.jpg 2x,\n/static/08d6e8e89f98423aecffd7e6315dbf34-4704a.jpg 3x"}}]},author:{id:"Myer Nore",avatar:{children:[{responsiveResolution:{src:"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg",srcSet:"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg 1x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-e6d15.jpg 1.5x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-b974e.jpg 2x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-89580.jpg 3x"}}]}}}}}]}},pathContext:{slug:"/steps/2018-03-02--objects/"}}}});
//# sourceMappingURL=path---steps-2018-03-02-objects-07b62d58a319371cfb58.js.map