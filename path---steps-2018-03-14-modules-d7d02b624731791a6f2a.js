webpackJsonp([0xd7b047db9f09],{"./node_modules/json-loader/index.js!./.cache/json/steps-2018-03-14-modules.json":function(e,t){e.exports={data:{post:{html:'<h2 id="what-are-modules"><a href="#what-are-modules" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>What are Modules?</h2>\n<p>Modules group related methods, exceptions and types into a package. In\naddition, Reason provides module interfaces that make it easier to swap out\none module for another module that fulfills the same interface.</p>\n<h2 id="module-syntax---basic-example"><a href="#module-syntax---basic-example" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Module Syntax - Basic Example</h2>\n<p>In contrast to <code>type</code>s like variants and records,\na <code>module</code> must begin with a capital letter. A variable that begins\nwith a capital letter often indicates it is a <code>module</code>.</p>\n<p>A module declaration looks generally like this:\n<code>module &#x3C;CapitalizedName> : &#x3C;ModuleInterfaceType> = &#x3C;implementation>;</code>.\nThe <code>ModuleInterfaceType</code> is optional as it is in Reason\'s type annotation\n<a href="https://reasonml.github.io/docs/en/type.html#annotations">in a <code>let binding</code></a>:\n<code>let &#x3C;variable name here> [: optionalTypeAnnotation] = "concreteValue"</code>.</p>\n<p>Here is a basic example of a Person Module:</p>\n<div class="gatsby-highlight">\n        <pre class="language-reason"><code>/* First, we define an interface type that clients will use.\n * This is like a "whitelist"; only things in the `module type` are\n * accessible outside the module. If you are familiar with Java, \n * this is similar to the Interface for a Class. \n */\nmodule type PersonType = {\n  type t;\n  let make: (~name: string) => t;\n  let toString: t => string;\n};\n\n/* This is an implementation of the PersonType interface defined above.\n * We can put things in here that are not in the interface, \n * and the compiler will hide them from client code.\n */\nmodule Person: PersonType = {\n  \n  /* in this implementation, we use a record for the module type */\n  type t = {name: string};\n  \n  /* the make function returns a record type `t` we\'ve defined above */\n  let make = (~name: string) => {name: name};\n  \n  /* the toString function takes a record type `t` we\'ve defined above\n   * and prints it out\n   */\n  let toString = t => "name: " ++ t.name;\n};\n\nlet p1 = Person.make(~name="Jason Hickey");\n\nJs.log(Person.toString(p1));</code></pre>\n        </div>\n<h2 id="what-problem-do-modules-solve"><a href="#what-problem-do-modules-solve" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>What problem do Modules solve?</h2>\n<p>In software, requirements evolve over time with feedback\nfrom a product\'s owner(s).  It often happens that a system needs a new feature\nthat the original engineers did not anticipate. This becomes\nespecially complicated in large projects. For example, if you need to modify\ncomponents A and B to provide a new feature, and components C-M depend on A while\ncomponents G-Z depend on B, it can become difficult to figure out what will break\nif the engineers that built A and B are no longer around. This problem gets worse\nif clients rely on direct implementation details. </p>\n<p>One strategy to is to ensure you can always swap out a component\nwith another "of roughly the same size and shape," that is, with a\ncomponent that fulfills the contract it currently guarantees its clients.\nAs long as the interface that a component\'s clients use stays the same,\nthe implementation is free to change.</p>\n<iframe src="https://giphy.com/embed/MS0fQBmGGMaRy" width="480" height="253" \n        frameBorder="0" class="giphy-embed" allowFullScreen></iframe>\n<h3 id="hypothetical-example-of-why-you-should-use-interfaces"><a href="#hypothetical-example-of-why-you-should-use-interfaces" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Hypothetical example of why you should use interfaces</h3>\n<p>Let\'s say you are an engineer for a social networking site. Your product\'s\ncomponent A used the Google Maps API to display a map of where users are\nlogged in right now. It didn\'t use an interface and instead exposed the\nGoogle Maps data structures to its downstream  components. Other coders\nended up using Google Maps\' data structures directly in the components they wrote,\nsince that was the easiest thing to do. Then your product owner decided to extend\nyour product\'s prescence in China, <a href="https://developers.google.com/maps/faq#china_ws_access">where Google Maps API doesn\'t work</a>.\nNow you have to go into all of those downstream components and re-engineer how\nthey are storing data ... ouch. Instead, you should have used an interface hiding how\nthe information was stored, and if you need to switch out a different API provider,\nyou won\'t have to change as many of your components.</p>\n<h2 id="reason-type-checks-and-modules"><a href="#reason-type-checks-and-modules" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Reason Type Checks and Modules</h2>\n<p>ReasonML\'s type checking ensures two things about the relationship between\n<code>module</code> and <code>module type</code> expressions: </p>\n<ol>\n<li><strong>interface enforcement</strong>: if a <code>module type</code> declares a method, type or\nother entity, then the <code>module</code> that conforms to that interface must implement\nthat entity.</li>\n<li><strong>encapsulation</strong>: if it\'s not in the <code>module type</code> for a module,\nclients can\'t see that part of the implementation.</li>\n</ol>\n<p><em>In the context of ReasonML, the terms interface,\nsignature, and module type are all used interchangeably.</em></p>\n<h3 id="example---module-type-enforcement"><a href="#example---module-type-enforcement" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example - module type enforcement</h3>\n<div class="gatsby-highlight">\n        <pre class="language-reason"><code>/* Make a new module type S1, e.g. interface for a module */\nmodule type S1 = {\n  let x: int; \n  let y: int;\n};\n\n/* We\'ve declared module M1 to be of module type S1. */ \nmodule M1: S1 = {\n  let x = 42;\n};\n\n/**\n The above won\'t compile; Reason throws this error: \n Line 2, 17: Signature mismatch: ... The value `y` is required but not provided\n **/</code></pre>\n        </div>\n<p>Everything in the <code>module type</code> must also be in the <code>module</code>. We left out <code>y</code> from\nthe module M1, and it wouldn\'t compile.</p>\n<h3 id="example---module-type-encapsulation"><a href="#example---module-type-encapsulation" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example - module type encapsulation</h3>\n<div class="gatsby-highlight">\n        <pre class="language-reason"><code>module type S2 = {\n  let x: int;\n};\n\nmodule M2: S2 = {\n  let x = 42;\n  let y = 7;\n};\n\nJs.log(M2.y)\n\n/**\nThe above won\'t compile; Reason throws this error:\nLine 4, 15: Unbound value M2.y\n**/</code></pre>\n        </div>\n<p>By declaring <code>M2</code> to conform to interface <code>S2</code>, then everything not in\n<code>S2</code> is "private" to the inside <code>M2</code>. Here, we tried to get the "private"\nproperty <code>y</code> outside of <code>M2</code>\'s closure, so Reason threw a compile time error.</p>\n<h2 id="modules---exercises"><a href="#modules---exercises" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Modules - Exercises</h2>\n<h3 id="fraction-module---advanced"><a href="#fraction-module---advanced" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Fraction Module - Advanced</h3>\n<p><em>This exercise is <a href="https://github.com/smolkaj">Steffen Smolka\'s</a>, taken from\n<a href="http://www.cs.cornell.edu/courses/cs3110/2018sp/l/07-modules/lab.html">Cornell\'s CS 3110 Lecture 7 Lab</a>.</em></p>\n<p>Write a module implementing the following <code>Fraction</code> module type:</p>\n<div class="gatsby-highlight">\n        <pre class="language-reason"><code>module type Fraction = {\n  /* A fraction is a rational number p/q, where q != 0.*/\n  type t;\n  /* [make n d] is n/d. Requires d != 0. */\n  let make: (int, int) => t;\n  let numerator: t => int;\n  let denominator: t => int;\n  let toString: t => string;\n  let toReal: t => float;\n  let add: (t, t) => t;\n  let mul: (t, t) => t;\n};</code></pre>\n        </div>\n<p>Your module should ensure that <code>make</code>, <code>add</code>, and <code>mul</code> return numbers\nin <a href="https://en.wikipedia.org/wiki/Irreducible_fraction">reduced form</a>\nwhere the denominator is positive. See the <em>Gradus Reason</em> step\n<a href="/steps/2017-11-19--names-and-functions/">Names and Functions</a>\nfor a sample implementation of Euclid\'s Algorithm.</p>\n<h2 id="modules---links"><a href="#modules---links" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Modules - Links</h2>\n<ul>\n<li><a href="https://reasonml.github.io/docs/en/module.html">ReasonML docs for <code>Module</code></a></li>\n<li><a href="http://reasonmlhub.com/exploring-reasonml/ch_basic-modules.html">Basic Modules from <em>Exploring ReasonML</em> Book by Dr. Axel Rauschmayer</a></li>\n<li><a href="https://realworldocaml.org/v1/en/html/files-modules-and-programs.html"><em>Chapter 4 - Files Modules and Programs</em> from <em>Real World OCaml</em></a></li>\n<li><a href="https://ocaml.org/learn/tutorials/modules.html">OCaml tutorial on Modules</a></li>\n<li><a href="https://caml.inria.fr/pub/docs/manual-ocaml/moduleexamples.html"><em>Chapter 2 The Module System</em> from <em>The OCaml Manual</em></a></li>\n<li><a href="https://www.cs.princeton.edu/courses/archive/fall17/cos326/lec/15-modules.pdf"><em>Modules and Abstract Data Types</em>, lecture from Princeton\'s COS 326 by David Walker</a></li>\n<li><a href="http://www.cs.cornell.edu/courses/cs3110/2018sp/l/07-modules/notes.html"><em>Modules</em>, lecture notes in Cornell\'s 2018 CS 3110</a></li>\n<li><a href="http://www.cs.cornell.edu/courses/cs3110/2018sp/l/07-modules/code.ml"><em>Modules</em>, code examples in Cornell\'s 2018 CS 3110</a></li>\n<li><a href="http://www.cs.cornell.edu/courses/cs3110/2018sp/l/07-modules/lec.pdf"><em>Modules</em>, lecture slides in Cornell\'s 2018 CS 3110</a></li>\n<li><a href="http://www.nuprl.org/documents/Hickey/02caltech-ocaml.pdf"><em>Introduction to Objective Caml</em> by Jason Hickey, Chapters 11 and 12</a></li>\n</ul>\n<p>Image Credit: <a href="https://www.flickr.com/photos/cimddwc/16037999946/in/album-72157649784716806/"><em>Port Birch South - street 1</em> by cimddwc on Flickr</a></p>\n<p><em><a href="https://github.com/codekiln/gradus-reason/tree/master/data/steps/2018-03-14--modules/index.md">Edit this post here</a></em></p>',excerpt:"What are Modules? Modules group related methods, exceptions and types into a package. In \naddition, Reason provides module interfaces that…",timeToRead:6,fields:{slug:"/steps/2018-03-14--modules/"},frontmatter:{tags:["modules","functors"],author:{id:"Myer Nore",bio:"",twitter:"@MyerNore",avatar:{children:[{responsiveResolution:{src:"/static/eebd74c7dad24cbd53ab5eee2861fe0b-03c1e.jpg",srcSet:"/static/eebd74c7dad24cbd53ab5eee2861fe0b-03c1e.jpg 1x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-95a48.jpg 1.5x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-cc0c5.jpg 2x"}}]}},title:"Modules",updatedDate:"Mar 14, 2018",image:{children:[{responsiveResolution:{src:"/static/4b207212da2130c54d5d3f3c6852486b-936ba.jpg",srcSet:"/static/4b207212da2130c54d5d3f3c6852486b-936ba.jpg 1x,\n/static/4b207212da2130c54d5d3f3c6852486b-1afa9.jpg 1.5x,\n/static/4b207212da2130c54d5d3f3c6852486b-e5a09.jpg 2x"}}]}}},recents:{edges:[{node:{fields:{slug:"/steps/2018-03-06--maps/"},timeToRead:5,frontmatter:{title:"Maps",image:{children:[{responsiveResolution:{src:"/static/502660d3a6174f3c7a7553e0a1b971c9-7f526.jpg",srcSet:"/static/502660d3a6174f3c7a7553e0a1b971c9-7f526.jpg 1x,\n/static/502660d3a6174f3c7a7553e0a1b971c9-12b36.jpg 1.5x,\n/static/502660d3a6174f3c7a7553e0a1b971c9-f59e5.jpg 2x,\n/static/502660d3a6174f3c7a7553e0a1b971c9-4704a.jpg 3x"}}]},author:{id:"Myer Nore",avatar:{children:[{responsiveResolution:{src:"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg",srcSet:"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg 1x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-e6d15.jpg 1.5x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-b974e.jpg 2x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-89580.jpg 3x"}}]}}}}},{node:{fields:{slug:"/steps/2018-03-02--objects/"},timeToRead:2,frontmatter:{title:"Objects",image:{children:[{responsiveResolution:{src:"/static/0a992d200e8146e849bd5350b9256aee-7f526.jpg",srcSet:"/static/0a992d200e8146e849bd5350b9256aee-7f526.jpg 1x,\n/static/0a992d200e8146e849bd5350b9256aee-12b36.jpg 1.5x,\n/static/0a992d200e8146e849bd5350b9256aee-f59e5.jpg 2x,\n/static/0a992d200e8146e849bd5350b9256aee-4704a.jpg 3x"}}]},author:{id:"Myer Nore",avatar:{children:[{responsiveResolution:{src:"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg",srcSet:"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg 1x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-e6d15.jpg 1.5x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-b974e.jpg 2x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-89580.jpg 3x"}}]}}}}},{node:{fields:{slug:"/steps/2018-02-25--variants/"},timeToRead:5,frontmatter:{title:"Variants",image:{children:[{responsiveResolution:{src:"/static/5dc86a763411f112f6bc01857ef6b383-7f526.jpg",srcSet:"/static/5dc86a763411f112f6bc01857ef6b383-7f526.jpg 1x,\n/static/5dc86a763411f112f6bc01857ef6b383-12b36.jpg 1.5x,\n/static/5dc86a763411f112f6bc01857ef6b383-f59e5.jpg 2x,\n/static/5dc86a763411f112f6bc01857ef6b383-4704a.jpg 3x"}}]},author:{id:"Myer Nore",avatar:{children:[{responsiveResolution:{src:"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg",srcSet:"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg 1x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-e6d15.jpg 1.5x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-b974e.jpg 2x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-89580.jpg 3x"}}]}}}}},{node:{fields:{slug:"/steps/2018-02-23--records/"},timeToRead:3,frontmatter:{title:"Records",image:{children:[{responsiveResolution:{src:"/static/08d6e8e89f98423aecffd7e6315dbf34-7f526.jpg",srcSet:"/static/08d6e8e89f98423aecffd7e6315dbf34-7f526.jpg 1x,\n/static/08d6e8e89f98423aecffd7e6315dbf34-12b36.jpg 1.5x,\n/static/08d6e8e89f98423aecffd7e6315dbf34-f59e5.jpg 2x,\n/static/08d6e8e89f98423aecffd7e6315dbf34-4704a.jpg 3x"}}]},author:{id:"Myer Nore",avatar:{children:[{responsiveResolution:{src:"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg",srcSet:"/static/eebd74c7dad24cbd53ab5eee2861fe0b-a469f.jpg 1x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-e6d15.jpg 1.5x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-b974e.jpg 2x,\n/static/eebd74c7dad24cbd53ab5eee2861fe0b-89580.jpg 3x"}}]}}}}}]}},pathContext:{slug:"/steps/2018-03-14--modules/"}}}});
//# sourceMappingURL=path---steps-2018-03-14-modules-d7d02b624731791a6f2a.js.map